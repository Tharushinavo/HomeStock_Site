{"ast":null,"code":"var _jsxFileName = \"H:\\\\ITPM\\\\frontend\\\\src\\\\components\\\\AddFruits.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./AddFruits.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddFruits() {\n  _s();\n  const [itemName, setItemName] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [unit, setUnit] = useState(\"\");\n  const [productDetails, setProductDetails] = useState(\"\");\n  const [refillDate, setRefillDate] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [products, setProducts] = useState([]); // State to store fetched products\n\n  // Function to fetch products from MongoDB\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8074/category\");\n      setProducts(response.data);\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts(); // Fetch products on component mount\n  }, []);\n\n  // Form validation logic\n  const validateForm = () => {\n    const newErrors = {};\n    if (!itemName.trim()) newErrors.itemName = \"Item name is required.\";\n    if (!quantity.trim() || isNaN(quantity) || quantity <= 0) newErrors.quantity = \"Quantity must be a positive number.\";\n    if (!unit.trim()) newErrors.unit = \"Unit is required.\";\n    if (!productDetails.trim()) newErrors.productDetails = \"Product details are required.\";\n    if (!refillDate.trim()) newErrors.refillDate = \"Refill date is required.\";\n    if (!status.trim()) newErrors.status = \"Status is required.\";\n    if (!notes.trim()) newErrors.notes = \"Notes are required.\";\n    return newErrors;\n  };\n  const sendData = async e => {\n    e.preventDefault();\n    const newErrors = validateForm();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    const newProduct = {\n      itemname: itemName.trim(),\n      quantity: quantity.trim(),\n      unit: unit.trim(),\n      productDetails: productDetails.trim(),\n      refillDate: refillDate.trim(),\n      status: status.trim(),\n      notes: notes.trim()\n    };\n    try {\n      await axios.post(\"http://localhost:8074/category/add\", newProduct);\n      alert(\"New Product Added Successfully\");\n      // Reset form fields\n      setItemName(\"\");\n      setQuantity(\"\");\n      setUnit(\"\");\n      setProductDetails(\"\");\n      setRefillDate(\"\");\n      setStatus(\"\");\n      setNotes(\"\");\n      setErrors({});\n      fetchProducts(); // Refresh the product list\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendData,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"itemName\",\n        children: \"Item Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"itemName\",\n        placeholder: \"Enter item name\",\n        onChange: e => setItemName(e.target.value),\n        value: itemName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), errors.itemName && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.itemName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantity\",\n        children: \"Quantity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"quantity\",\n        placeholder: \"Enter quantity\",\n        onChange: e => setQuantity(e.target.value),\n        value: quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), errors.quantity && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"unit\",\n        children: \"Unit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"unit\",\n        placeholder: \"Enter unit (e.g., kg, liters)\",\n        onChange: e => setUnit(e.target.value),\n        value: unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), errors.unit && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productDetails\",\n        children: \"Product Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"productDetails\",\n        placeholder: \"Enter product details\",\n        onChange: e => setProductDetails(e.target.value),\n        value: productDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), errors.productDetails && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.productDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"refillDate\",\n        children: \"Refill Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"refillDate\",\n        onChange: e => setRefillDate(e.target.value),\n        value: refillDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), errors.refillDate && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.refillDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"status\",\n        placeholder: \"Enter product status\",\n        onChange: e => setStatus(e.target.value),\n        value: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), errors.status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"notes\",\n        children: \"Notes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"notes\",\n        placeholder: \"Enter any additional notes\",\n        onChange: e => setNotes(e.target.value),\n        value: notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), errors.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Item Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Refill Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.length > 0 ? products.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.itemname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.refillDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"7\",\n            children: \"No products available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(AddFruits, \"eZtdsV2M3kiNq0wRDnAGmpDZ4mU=\");\n_c = AddFruits;\nvar _c;\n$RefreshReg$(_c, \"AddFruits\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AddFruits","_s","itemName","setItemName","quantity","setQuantity","unit","setUnit","productDetails","setProductDetails","refillDate","setRefillDate","status","setStatus","notes","setNotes","errors","setErrors","products","setProducts","fetchProducts","response","get","data","error","console","validateForm","newErrors","trim","isNaN","sendData","e","preventDefault","Object","keys","length","newProduct","itemname","post","alert","err","_err$response","_err$response$data","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","onChange","target","value","map","product","index","colSpan","_c","$RefreshReg$"],"sources":["H:/ITPM/frontend/src/components/AddFruits.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./AddFruits.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function AddFruits() {\r\n    const [itemName, setItemName] = useState(\"\");\r\n    const [quantity, setQuantity] = useState(\"\");\r\n    const [unit, setUnit] = useState(\"\");\r\n    const [productDetails, setProductDetails] = useState(\"\");\r\n    const [refillDate, setRefillDate] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [notes, setNotes] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [products, setProducts] = useState([]); // State to store fetched products\r\n\r\n    // Function to fetch products from MongoDB\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:8074/category\");\r\n            setProducts(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching products:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchProducts(); // Fetch products on component mount\r\n    }, []);\r\n\r\n    // Form validation logic\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        if (!itemName.trim()) newErrors.itemName = \"Item name is required.\";\r\n        if (!quantity.trim() || isNaN(quantity) || quantity <= 0) newErrors.quantity = \"Quantity must be a positive number.\";\r\n        if (!unit.trim()) newErrors.unit = \"Unit is required.\";\r\n        if (!productDetails.trim()) newErrors.productDetails = \"Product details are required.\";\r\n        if (!refillDate.trim()) newErrors.refillDate = \"Refill date is required.\";\r\n        if (!status.trim()) newErrors.status = \"Status is required.\";\r\n        if (!notes.trim()) newErrors.notes = \"Notes are required.\";\r\n        return newErrors;\r\n    };\r\n\r\n    const sendData = async (e) => {\r\n        e.preventDefault();\r\n        const newErrors = validateForm();\r\n\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n            return;\r\n        }\r\n\r\n        const newProduct = {\r\n            itemname: itemName.trim(),\r\n            quantity: quantity.trim(),\r\n            unit: unit.trim(),\r\n            productDetails: productDetails.trim(),\r\n            refillDate: refillDate.trim(),\r\n            status: status.trim(),\r\n            notes: notes.trim(),\r\n        };\r\n\r\n        try {\r\n            await axios.post(\"http://localhost:8074/category/add\", newProduct);\r\n            alert(\"New Product Added Successfully\");\r\n            // Reset form fields\r\n            setItemName(\"\");\r\n            setQuantity(\"\");\r\n            setUnit(\"\");\r\n            setProductDetails(\"\");\r\n            setRefillDate(\"\");\r\n            setStatus(\"\");\r\n            setNotes(\"\");\r\n            setErrors({});\r\n            fetchProducts(); // Refresh the product list\r\n        } catch (err) {\r\n            alert(err.response?.data?.message || \"An error occurred. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={sendData}>\r\n                <h2>Add Product</h2>\r\n\r\n                <label htmlFor=\"itemName\">Item Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"itemName\"\r\n                    placeholder=\"Enter item name\"\r\n                    onChange={(e) => setItemName(e.target.value)}\r\n                    value={itemName}\r\n                />\r\n                {errors.itemName && <p className=\"error\">{errors.itemName}</p>}\r\n\r\n                <label htmlFor=\"quantity\">Quantity:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"quantity\"\r\n                    placeholder=\"Enter quantity\"\r\n                    onChange={(e) => setQuantity(e.target.value)}\r\n                    value={quantity}\r\n                />\r\n                {errors.quantity && <p className=\"error\">{errors.quantity}</p>}\r\n\r\n                <label htmlFor=\"unit\">Unit:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"unit\"\r\n                    placeholder=\"Enter unit (e.g., kg, liters)\"\r\n                    onChange={(e) => setUnit(e.target.value)}\r\n                    value={unit}\r\n                />\r\n                {errors.unit && <p className=\"error\">{errors.unit}</p>}\r\n\r\n                <label htmlFor=\"productDetails\">Product Details:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"productDetails\"\r\n                    placeholder=\"Enter product details\"\r\n                    onChange={(e) => setProductDetails(e.target.value)}\r\n                    value={productDetails}\r\n                />\r\n                {errors.productDetails && <p className=\"error\">{errors.productDetails}</p>}\r\n\r\n                <label htmlFor=\"refillDate\">Refill Date:</label>\r\n                <input\r\n                    type=\"date\"\r\n                    id=\"refillDate\"\r\n                    onChange={(e) => setRefillDate(e.target.value)}\r\n                    value={refillDate}\r\n                />\r\n                {errors.refillDate && <p className=\"error\">{errors.refillDate}</p>}\r\n\r\n                <label htmlFor=\"status\">Status:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"status\"\r\n                    placeholder=\"Enter product status\"\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    value={status}\r\n                />\r\n                {errors.status && <p className=\"error\">{errors.status}</p>}\r\n\r\n                <label htmlFor=\"notes\">Notes:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"notes\"\r\n                    placeholder=\"Enter any additional notes\"\r\n                    onChange={(e) => setNotes(e.target.value)}\r\n                    value={notes}\r\n                />\r\n                {errors.notes && <p className=\"error\">{errors.notes}</p>}\r\n\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n\r\n            {/* Table to Display Fetched Products */}\r\n            <h2>Product List</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Item Name</th>\r\n                        <th>Quantity</th>\r\n                        <th>Unit</th>\r\n                        <th>Product Details</th>\r\n                        <th>Refill Date</th>\r\n                        <th>Status</th>\r\n                        <th>Notes</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.length > 0 ? (\r\n                        products.map((product, index) => (\r\n                            <tr key={index}>\r\n                                <td>{product.itemname}</td>\r\n                                <td>{product.quantity}</td>\r\n                                <td>{product.unit}</td>\r\n                                <td>{product.productDetails}</td>\r\n                                <td>{product.refillDate}</td>\r\n                                <td>{product.status}</td>\r\n                                <td>{product.notes}</td>\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan=\"7\">No products available</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMyB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,gCAAgC,CAAC;MAClEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED5B,SAAS,CAAC,MAAM;IACZwB,aAAa,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpB,IAAI,CAACzB,QAAQ,CAAC0B,IAAI,CAAC,CAAC,EAAED,SAAS,CAACzB,QAAQ,GAAG,wBAAwB;IACnE,IAAI,CAACE,QAAQ,CAACwB,IAAI,CAAC,CAAC,IAAIC,KAAK,CAACzB,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,EAAEuB,SAAS,CAACvB,QAAQ,GAAG,qCAAqC;IACpH,IAAI,CAACE,IAAI,CAACsB,IAAI,CAAC,CAAC,EAAED,SAAS,CAACrB,IAAI,GAAG,mBAAmB;IACtD,IAAI,CAACE,cAAc,CAACoB,IAAI,CAAC,CAAC,EAAED,SAAS,CAACnB,cAAc,GAAG,+BAA+B;IACtF,IAAI,CAACE,UAAU,CAACkB,IAAI,CAAC,CAAC,EAAED,SAAS,CAACjB,UAAU,GAAG,0BAA0B;IACzE,IAAI,CAACE,MAAM,CAACgB,IAAI,CAAC,CAAC,EAAED,SAAS,CAACf,MAAM,GAAG,qBAAqB;IAC5D,IAAI,CAACE,KAAK,CAACc,IAAI,CAAC,CAAC,EAAED,SAAS,CAACb,KAAK,GAAG,qBAAqB;IAC1D,OAAOa,SAAS;EACpB,CAAC;EAED,MAAMG,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAML,SAAS,GAAGD,YAAY,CAAC,CAAC;IAEhC,IAAIO,MAAM,CAACC,IAAI,CAACP,SAAS,CAAC,CAACQ,MAAM,GAAG,CAAC,EAAE;MACnClB,SAAS,CAACU,SAAS,CAAC;MACpB;IACJ;IAEA,MAAMS,UAAU,GAAG;MACfC,QAAQ,EAAEnC,QAAQ,CAAC0B,IAAI,CAAC,CAAC;MACzBxB,QAAQ,EAAEA,QAAQ,CAACwB,IAAI,CAAC,CAAC;MACzBtB,IAAI,EAAEA,IAAI,CAACsB,IAAI,CAAC,CAAC;MACjBpB,cAAc,EAAEA,cAAc,CAACoB,IAAI,CAAC,CAAC;MACrClB,UAAU,EAAEA,UAAU,CAACkB,IAAI,CAAC,CAAC;MAC7BhB,MAAM,EAAEA,MAAM,CAACgB,IAAI,CAAC,CAAC;MACrBd,KAAK,EAAEA,KAAK,CAACc,IAAI,CAAC;IACtB,CAAC;IAED,IAAI;MACA,MAAM/B,KAAK,CAACyC,IAAI,CAAC,oCAAoC,EAAEF,UAAU,CAAC;MAClEG,KAAK,CAAC,gCAAgC,CAAC;MACvC;MACApC,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;MACfE,OAAO,CAAC,EAAE,CAAC;MACXE,iBAAiB,CAAC,EAAE,CAAC;MACrBE,aAAa,CAAC,EAAE,CAAC;MACjBE,SAAS,CAAC,EAAE,CAAC;MACbE,QAAQ,CAAC,EAAE,CAAC;MACZE,SAAS,CAAC,CAAC,CAAC,CAAC;MACbG,aAAa,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOoB,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACVH,KAAK,CAAC,EAAAE,aAAA,GAAAD,GAAG,CAACnB,QAAQ,cAAAoB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAclB,IAAI,cAAAmB,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,sCAAsC,CAAC;IAChF;EACJ,CAAC;EAED,oBACI5C,OAAA;IAAK6C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB9C,OAAA;MAAM+C,QAAQ,EAAEhB,QAAS;MAAAe,QAAA,gBACrB9C,OAAA;QAAA8C,QAAA,EAAI;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpBnD,OAAA;QAAOoD,OAAO,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5CnD,OAAA;QACIqD,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,UAAU;QACbC,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ,EAAGxB,CAAC,IAAK5B,WAAW,CAAC4B,CAAC,CAACyB,MAAM,CAACC,KAAK,CAAE;QAC7CA,KAAK,EAAEvD;MAAS;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,EACDlC,MAAM,CAACd,QAAQ,iBAAIH,OAAA;QAAG6C,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE7B,MAAM,CAACd;MAAQ;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE9DnD,OAAA;QAAOoD,OAAO,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3CnD,OAAA;QACIqD,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,UAAU;QACbC,WAAW,EAAC,gBAAgB;QAC5BC,QAAQ,EAAGxB,CAAC,IAAK1B,WAAW,CAAC0B,CAAC,CAACyB,MAAM,CAACC,KAAK,CAAE;QAC7CA,KAAK,EAAErD;MAAS;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,EACDlC,MAAM,CAACZ,QAAQ,iBAAIL,OAAA;QAAG6C,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE7B,MAAM,CAACZ;MAAQ;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE9DnD,OAAA;QAAOoD,OAAO,EAAC,MAAM;QAAAN,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnCnD,OAAA;QACIqD,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,WAAW,EAAC,+BAA+B;QAC3CC,QAAQ,EAAGxB,CAAC,IAAKxB,OAAO,CAACwB,CAAC,CAACyB,MAAM,CAACC,KAAK,CAAE;QACzCA,KAAK,EAAEnD;MAAK;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,EACDlC,MAAM,CAACV,IAAI,iBAAIP,OAAA;QAAG6C,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE7B,MAAM,CAACV;MAAI;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEtDnD,OAAA;QAAOoD,OAAO,EAAC,gBAAgB;QAAAN,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxDnD,OAAA;QACIqD,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,gBAAgB;QACnBC,WAAW,EAAC,uBAAuB;QACnCC,QAAQ,EAAGxB,CAAC,IAAKtB,iBAAiB,CAACsB,CAAC,CAACyB,MAAM,CAACC,KAAK,CAAE;QACnDA,KAAK,EAAEjD;MAAe;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,EACDlC,MAAM,CAACR,cAAc,iBAAIT,OAAA;QAAG6C,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE7B,MAAM,CAACR;MAAc;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1EnD,OAAA;QAAOoD,OAAO,EAAC,YAAY;QAAAN,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDnD,OAAA;QACIqD,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,YAAY;QACfE,QAAQ,EAAGxB,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACyB,MAAM,CAACC,KAAK,CAAE;QAC/CA,KAAK,EAAE/C;MAAW;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,EACDlC,MAAM,CAACN,UAAU,iBAAIX,OAAA;QAAG6C,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE7B,MAAM,CAACN;MAAU;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAElEnD,OAAA;QAAOoD,OAAO,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvCnD,OAAA;QACIqD,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,QAAQ;QACXC,WAAW,EAAC,sBAAsB;QAClCC,QAAQ,EAAGxB,CAAC,IAAKlB,SAAS,CAACkB,CAAC,CAACyB,MAAM,CAACC,KAAK,CAAE;QAC3CA,KAAK,EAAE7C;MAAO;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,EACDlC,MAAM,CAACJ,MAAM,iBAAIb,OAAA;QAAG6C,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE7B,MAAM,CAACJ;MAAM;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1DnD,OAAA;QAAOoD,OAAO,EAAC,OAAO;QAAAN,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCnD,OAAA;QACIqD,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,OAAO;QACVC,WAAW,EAAC,4BAA4B;QACxCC,QAAQ,EAAGxB,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAACyB,MAAM,CAACC,KAAK,CAAE;QAC1CA,KAAK,EAAE3C;MAAM;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,EACDlC,MAAM,CAACF,KAAK,iBAAIf,OAAA;QAAG6C,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE7B,MAAM,CAACF;MAAK;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAExDnD,OAAA;QAAQqD,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAGPnD,OAAA;MAAA8C,QAAA,EAAI;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnD,OAAA;MAAA8C,QAAA,gBACI9C,OAAA;QAAA8C,QAAA,eACI9C,OAAA;UAAA8C,QAAA,gBACI9C,OAAA;YAAA8C,QAAA,EAAI;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBnD,OAAA;YAAA8C,QAAA,EAAI;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBnD,OAAA;YAAA8C,QAAA,EAAI;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbnD,OAAA;YAAA8C,QAAA,EAAI;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBnD,OAAA;YAAA8C,QAAA,EAAI;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBnD,OAAA;YAAA8C,QAAA,EAAI;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfnD,OAAA;YAAA8C,QAAA,EAAI;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRnD,OAAA;QAAA8C,QAAA,EACK3B,QAAQ,CAACiB,MAAM,GAAG,CAAC,GAChBjB,QAAQ,CAACwC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACxB7D,OAAA;UAAA8C,QAAA,gBACI9C,OAAA;YAAA8C,QAAA,EAAKc,OAAO,CAACtB;UAAQ;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BnD,OAAA;YAAA8C,QAAA,EAAKc,OAAO,CAACvD;UAAQ;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BnD,OAAA;YAAA8C,QAAA,EAAKc,OAAO,CAACrD;UAAI;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBnD,OAAA;YAAA8C,QAAA,EAAKc,OAAO,CAACnD;UAAc;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjCnD,OAAA;YAAA8C,QAAA,EAAKc,OAAO,CAACjD;UAAU;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7BnD,OAAA;YAAA8C,QAAA,EAAKc,OAAO,CAAC/C;UAAM;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBnD,OAAA;YAAA8C,QAAA,EAAKc,OAAO,CAAC7C;UAAK;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAPnBU,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CACP,CAAC,gBAEFnD,OAAA;UAAA8C,QAAA,eACI9C,OAAA;YAAI8D,OAAO,EAAC,GAAG;YAAAhB,QAAA,EAAC;UAAqB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACjD,EAAA,CA5LuBD,SAAS;AAAA8D,EAAA,GAAT9D,SAAS;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}