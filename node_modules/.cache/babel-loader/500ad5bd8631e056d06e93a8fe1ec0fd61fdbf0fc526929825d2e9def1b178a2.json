{"ast":null,"code":"var _jsxFileName = \"H:\\\\ITPM\\\\frontend\\\\src\\\\components\\\\CategoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryList = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    // Fetch categories from backend\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/categories');\n        setCategories(response.data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchCategories();\n  }, []);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      className: \"category-button\",\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-list\",\n      children: categories.slice(0, 7).map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dropdown-item\",\n        children: [category.name, category.hasSubcategories && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"category-arrow\",\n          children: \" > \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoryList, \"kHA4qPlrgAqwGUWiJGzj7+dA5FQ=\");\n_c = CategoryList;\nexport default CategoryList;\nvar _c;\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CategoryList","_s","categories","setCategories","isOpen","setIsOpen","fetchCategories","response","get","data","error","console","toggleDropdown","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","category","index","name","hasSubcategories","_c","$RefreshReg$"],"sources":["H:/ITPM/frontend/src/components/CategoryList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CategoryList = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Fetch categories from backend\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/categories');\r\n                setCategories(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching categories:', error);\r\n            }\r\n        };\r\n\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    const toggleDropdown = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n        <div className=\"category-dropdown\">\r\n            <button onClick={toggleDropdown} className=\"category-button\">\r\n                Categories\r\n            </button>\r\n            {isOpen && (\r\n                <ul className=\"dropdown-list\">\r\n                    {categories.slice(0, 7).map((category, index) => (\r\n                        <li key={index} className=\"dropdown-item\">\r\n                            {category.name}\r\n                            {category.hasSubcategories && (\r\n                                <span className=\"category-arrow\"> &gt; </span>\r\n                            )}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,sCAAsC,CAAC;QACxEL,aAAa,CAACI,QAAQ,CAACE,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IAEDJ,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,cAAc,GAAGA,CAAA,KAAM;IACzBP,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAED,oBACIL,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9Bf,OAAA;MAAQgB,OAAO,EAAEH,cAAe;MAACC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAE7D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRf,MAAM,iBACHL,OAAA;MAAIc,SAAS,EAAC,eAAe;MAAAC,QAAA,EACxBZ,UAAU,CAACkB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACxCxB,OAAA;QAAgBc,SAAS,EAAC,eAAe;QAAAC,QAAA,GACpCQ,QAAQ,CAACE,IAAI,EACbF,QAAQ,CAACG,gBAAgB,iBACtB1B,OAAA;UAAMc,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAChD;MAAA,GAJII,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAClB,EAAA,CAzCID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA2ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}