{"ast":null,"code":"var _jsxFileName = \"H:\\\\ITPM\\\\frontend\\\\src\\\\components\\\\CategoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\nimport './CategoryList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  id: 1,\n  name: \"Fruits\",\n  image: \"/images/fruit.avif\"\n}, {\n  id: 2,\n  name: \"Drinks\",\n  image: \"/images/drinks.webp\"\n}, {\n  id: 3,\n  name: \"Dairy\",\n  image: \"/images/dairy.jpg\"\n}, {\n  id: 4,\n  name: \"Meat\",\n  image: \"/images/meat.jpg\"\n}, {\n  id: 5,\n  name: \"Vegetables\",\n  image: \"/images/vegetables.jpg\"\n}, {\n  id: 6,\n  name: \"Snacks\",\n  image: \"/images/snacks.jpg\"\n}, {\n  id: 7,\n  name: \"Grains\",\n  image: \"/images/grains.jpg\"\n}];\nconst CategoryList = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const navigate = useNavigate(); // Initialize navigate\n\n  const handleCategoryClick = categoryId => {\n    setSelectedCategory(categoryId);\n    if (categoryId === 1) {\n      // If 'Fruits' category is clicked\n      navigate(\"/add\"); // Navigate to the AddFruits page\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"CATEGORIES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-grid\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `category-card ${selectedCategory === category.id ? 'selected' : ''}`,\n        onClick: () => handleCategoryClick(category.id) // Handle category click\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: category.image,\n          alt: category.name,\n          className: \"category-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-name\",\n          children: [category.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoryList, \"lvHvVxnV0KZBiXt/e0vmT83wcFA=\", false, function () {\n  return [useNavigate];\n});\n_c = CategoryList;\nexport default CategoryList;\nvar _c;\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","categories","id","name","image","CategoryList","_s","selectedCategory","setSelectedCategory","navigate","handleCategoryClick","categoryId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","onClick","src","alt","_c","$RefreshReg$"],"sources":["H:/ITPM/frontend/src/components/CategoryList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\r\nimport './CategoryList.css';\r\n\r\nconst categories = [\r\n    { id: 1, name: \"Fruits\", image: \"/images/fruit.avif\" },\r\n    { id: 2, name: \"Drinks\", image: \"/images/drinks.webp\" },\r\n    { id: 3, name: \"Dairy\", image: \"/images/dairy.jpg\" },\r\n    { id: 4, name: \"Meat\", image: \"/images/meat.jpg\" },\r\n    { id: 5, name: \"Vegetables\", image: \"/images/vegetables.jpg\" },\r\n    { id: 6, name: \"Snacks\", image: \"/images/snacks.jpg\" },\r\n    { id: 7, name: \"Grains\", image: \"/images/grains.jpg\" }\r\n];\r\n\r\nconst CategoryList = () => {\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const navigate = useNavigate(); // Initialize navigate\r\n\r\n    const handleCategoryClick = (categoryId) => {\r\n        setSelectedCategory(categoryId);\r\n        if (categoryId === 1) { // If 'Fruits' category is clicked\r\n            navigate(\"/add\"); // Navigate to the AddFruits page\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"category-page\">\r\n            <h1 className=\"title\">CATEGORIES</h1>\r\n            <div className=\"category-grid\">\r\n                {categories.map(category => (\r\n                    <div \r\n                        key={category.id} \r\n                        className={`category-card ${selectedCategory === category.id ? 'selected' : ''}`}\r\n                        onClick={() => handleCategoryClick(category.id)} // Handle category click\r\n                    >\r\n                        <img src={category.image} alt={category.name} className=\"category-image\" />\r\n                        <div className=\"category-name\">\r\n                            {category.name} <span className=\"arrow\">&gt;</span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}