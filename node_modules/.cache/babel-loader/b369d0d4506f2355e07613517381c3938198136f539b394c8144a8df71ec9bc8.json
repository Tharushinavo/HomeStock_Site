{"ast":null,"code":"var _jsxFileName = \"H:\\\\ITPM\\\\frontend\\\\src\\\\components\\\\CategoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryList = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    // Sample category data\n    const sampleCategories = [{\n      id: 1,\n      name: \"Fruits\"\n    }, {\n      id: 2,\n      name: \"Vegetables\"\n    }, {\n      id: 3,\n      name: \"Dairy\"\n    }, {\n      id: 4,\n      name: \"Meat\"\n    }, {\n      id: 5,\n      name: \"Grains\"\n    }, {\n      id: 6,\n      name: \"Snacks\"\n    }, {\n      id: 7,\n      name: \"Drinks\"\n    }];\n    setCategories(sampleCategories);\n  }, []);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      className: \"category-button\",\n      children: [\"Categories \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"category-arrow\",\n        children: \" > \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-list\",\n      children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dropdown-item\",\n        children: [category.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"category-arrow\",\n          children: \" > \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 45\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoryList, \"kHA4qPlrgAqwGUWiJGzj7+dA5FQ=\");\n_c = CategoryList;\nexport default CategoryList;\nvar _c;\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CategoryList","_s","categories","setCategories","isOpen","setIsOpen","sampleCategories","id","name","toggleDropdown","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","category","index","_c","$RefreshReg$"],"sources":["H:/ITPM/frontend/src/components/CategoryList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CategoryList = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Sample category data\r\n        const sampleCategories = [\r\n            { id: 1, name: \"Fruits\" },\r\n            { id: 2, name: \"Vegetables\" },\r\n            { id: 3, name: \"Dairy\" },\r\n            { id: 4, name: \"Meat\" },\r\n            { id: 5, name: \"Grains\" },\r\n            { id: 6, name: \"Snacks\" },\r\n            { id: 7, name: \"Drinks\" }\r\n        ];\r\n        setCategories(sampleCategories);\r\n    }, []);\r\n\r\n    const toggleDropdown = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n        <div className=\"category-dropdown\">\r\n            <button onClick={toggleDropdown} className=\"category-button\">\r\n                Categories <span className=\"category-arrow\"> &gt; </span>\r\n            </button>\r\n            {isOpen && (\r\n                <ul className=\"dropdown-list\">\r\n                    {categories.map((category, index) => (\r\n                        <li key={index} className=\"dropdown-item\">\r\n                            {category.name} <span className=\"category-arrow\"> &gt; </span>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,gBAAgB,GAAG,CACrB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAS,CAAC,EACzB;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAa,CAAC,EAC7B;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAQ,CAAC,EACxB;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAO,CAAC,EACvB;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAS,CAAC,EACzB;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAS,CAAC,EACzB;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAS,CAAC,CAC5B;IACDL,aAAa,CAACG,gBAAgB,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAGA,CAAA,KAAM;IACzBJ,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAED,oBACIL,OAAA;IAAKW,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BZ,OAAA;MAAQa,OAAO,EAAEH,cAAe;MAACC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAAC,aAC9C,eAAAZ,OAAA;QAAMW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,EACRZ,MAAM,iBACHL,OAAA;MAAIW,SAAS,EAAC,eAAe;MAAAC,QAAA,EACxBT,UAAU,CAACe,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC5BpB,OAAA;QAAgBW,SAAS,EAAC,eAAe;QAAAC,QAAA,GACpCO,QAAQ,CAACV,IAAI,EAAC,GAAC,eAAAT,OAAA;UAAMW,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GADzDG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CAtCID,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}