{"ast":null,"code":"var _jsxFileName = \"H:\\\\ITPM\\\\frontend\\\\src\\\\components\\\\CategoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CategoryList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryList = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    // Sample category data with images\n    const sampleCategories = [{\n      id: 1,\n      name: \"Fruits\",\n      image: \"/images/fruits.png\"\n    }, {\n      id: 2,\n      name: \"Vegetables\",\n      image: \"/images/vegetables.png\"\n    }, {\n      id: 3,\n      name: \"Dairy\",\n      image: \"/images/dairy.png\"\n    }, {\n      id: 4,\n      name: \"Meat\",\n      image: \"/images/meat.png\"\n    }, {\n      id: 5,\n      name: \"Grains\",\n      image: \"/images/grains.png\"\n    }, {\n      id: 6,\n      name: \"Snacks\",\n      image: \"/images/snacks.png\"\n    }, {\n      id: 7,\n      name: \"Drinks\",\n      image: \"/images/drinks.png\"\n    }];\n    setCategories(sampleCategories);\n  }, []);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      className: \"category-button\",\n      children: [\"Categories \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"category-arrow\",\n        children: \" > \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-list\",\n      children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dropdown-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: category.image,\n          alt: category.name,\n          className: \"category-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), category.name, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"category-arrow\",\n          children: \" > \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoryList, \"kHA4qPlrgAqwGUWiJGzj7+dA5FQ=\");\n_c = CategoryList;\nexport default CategoryList;\nvar _c;\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CategoryList","_s","categories","setCategories","isOpen","setIsOpen","sampleCategories","id","name","image","toggleDropdown","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","category","index","src","alt","_c","$RefreshReg$"],"sources":["H:/ITPM/frontend/src/components/CategoryList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CategoryList.css';\r\n\r\nconst CategoryList = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Sample category data with images\r\n        const sampleCategories = [\r\n            { id: 1, name: \"Fruits\", image: \"/images/fruits.png\" },\r\n            { id: 2, name: \"Vegetables\", image: \"/images/vegetables.png\" },\r\n            { id: 3, name: \"Dairy\", image: \"/images/dairy.png\" },\r\n            { id: 4, name: \"Meat\", image: \"/images/meat.png\" },\r\n            { id: 5, name: \"Grains\", image: \"/images/grains.png\" },\r\n            { id: 6, name: \"Snacks\", image: \"/images/snacks.png\" },\r\n            { id: 7, name: \"Drinks\", image: \"/images/drinks.png\" }\r\n        ];\r\n        setCategories(sampleCategories);\r\n    }, []);\r\n\r\n    const toggleDropdown = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n        <div className=\"category-dropdown\">\r\n            <button onClick={toggleDropdown} className=\"category-button\">\r\n                Categories <span className=\"category-arrow\"> &gt; </span>\r\n            </button>\r\n            {isOpen && (\r\n                <ul className=\"dropdown-list\">\r\n                    {categories.map((category, index) => (\r\n                        <li key={index} className=\"dropdown-item\">\r\n                            <img src={category.image} alt={category.name} className=\"category-icon\" />\r\n                            {category.name} \r\n                            <span className=\"category-arrow\"> &gt; </span>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}