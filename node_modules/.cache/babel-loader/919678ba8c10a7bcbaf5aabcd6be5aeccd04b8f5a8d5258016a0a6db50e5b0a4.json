{"ast":null,"code":"var _jsxFileName = \"H:\\\\ITPM\\\\frontend\\\\src\\\\components\\\\AddFruits.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./AddFruits.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddFruits() {\n  _s();\n  const [formData, setFormData] = useState({\n    itemName: \"\",\n    quantity: \"\",\n    unit: \"\",\n    productDetails: \"\",\n    refillDate: \"\",\n    status: \"\",\n    notes: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [products, setProducts] = useState([]);\n  const [formVisible, setFormVisible] = useState(false);\n  const [isUpdateMode, setIsUpdateMode] = useState(false);\n  const [productToUpdate, setProductToUpdate] = useState(null);\n\n  // Fetch products from the server\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8078/category\");\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  // Validate form data\n  const validateForm = () => {\n    var _formData$itemName, _formData$unit, _formData$productDeta, _formData$refillDate, _formData$status, _formData$notes;\n    const newErrors = {};\n    if (!((_formData$itemName = formData.itemName) !== null && _formData$itemName !== void 0 && _formData$itemName.trim())) newErrors.itemName = \"Required.\";\n    if (isNaN(formData.quantity) || formData.quantity <= 0) newErrors.quantity = \"Enter a valid number.\";\n    if (!((_formData$unit = formData.unit) !== null && _formData$unit !== void 0 && _formData$unit.trim())) newErrors.unit = \"Required.\";\n    if (!((_formData$productDeta = formData.productDetails) !== null && _formData$productDeta !== void 0 && _formData$productDeta.trim())) newErrors.productDetails = \"Required.\";\n    if (!((_formData$refillDate = formData.refillDate) !== null && _formData$refillDate !== void 0 && _formData$refillDate.trim())) newErrors.refillDate = \"Required.\";\n    if (!((_formData$status = formData.status) !== null && _formData$status !== void 0 && _formData$status.trim())) newErrors.status = \"Required.\";\n    if (!((_formData$notes = formData.notes) !== null && _formData$notes !== void 0 && _formData$notes.trim())) newErrors.notes = \"Required.\";\n    return newErrors;\n  };\n\n  // Handle form data changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Submit form data to the server\n  const sendData = async e => {\n    e.preventDefault();\n    const newErrors = validateForm();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    try {\n      if (isUpdateMode) {\n        const response = await fetch(`http://localhost:8078/category/update/${productToUpdate._id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        if (response.ok) {\n          alert(\"Product Updated Successfully\");\n        }\n      } else {\n        const response = await fetch(\"http://localhost:8078/category/add\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        if (response.ok) {\n          alert(\"New Product Added Successfully\");\n        }\n      }\n      resetForm();\n      fetchProducts(); // Refresh the product list\n    } catch (err) {\n      console.error(\"Error occurred:\", err);\n      alert(\"Network or server error. Please try again later.\");\n    }\n  };\n\n  // Reset the form data\n  const resetForm = () => {\n    setFormData({\n      itemName: \"\",\n      quantity: \"\",\n      unit: \"\",\n      productDetails: \"\",\n      refillDate: \"\",\n      status: \"\",\n      notes: \"\"\n    });\n    setErrors({});\n    setFormVisible(false);\n    setIsUpdateMode(false);\n    setProductToUpdate(null);\n  };\n\n  // Handle delete product\n  const handleDelete = async productId => {\n    try {\n      const response = await fetch(`http://localhost:8078/category/delete/${productId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        alert(\"Product deleted successfully\");\n        fetchProducts();\n      }\n    } catch (err) {\n      alert(\"Error deleting product:\", err.message);\n    }\n  };\n\n  // Handle update product\n  const handleUpdate = product => {\n    setProductToUpdate(product);\n    setFormData({\n      itemName: product.itemname,\n      quantity: product.quantity,\n      unit: product.unit,\n      productDetails: product.productDetails,\n      refillDate: product.refillDate,\n      status: product.status,\n      notes: product.notes\n    });\n    setIsUpdateMode(true);\n    setFormVisible(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fruit List \\uD83C\\uDF4E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Refill Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.length > 0 ? products.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.itemname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.refillDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdate(product),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(product._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"8\",\n            children: \"No products available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormVisible(!formVisible),\n      className: \"add-button\",\n      children: formVisible ? \"Cancel\" : \"+ Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), formVisible && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendData,\n      className: \"product-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isUpdateMode ? \"Update Product\" : \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), [\"itemName\", \"quantity\", \"unit\", \"productDetails\", \"refillDate\", \"status\", \"notes\"].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: field.replace(/([A-Z])/g, \" $1\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: field === \"quantity\" ? \"number\" : field === \"refillDate\" ? \"date\" : \"text\",\n          name: field,\n          value: formData[field],\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 29\n        }, this), errors[field] && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors[field]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 47\n        }, this)]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isUpdateMode ? \"Update Product\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n_s(AddFruits, \"/TJRJDBU1KnfHOiAfV79T2WmGDs=\");\n_c = AddFruits;\nvar _c;\n$RefreshReg$(_c, \"AddFruits\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddFruits","_s","formData","setFormData","itemName","quantity","unit","productDetails","refillDate","status","notes","errors","setErrors","products","setProducts","formVisible","setFormVisible","isUpdateMode","setIsUpdateMode","productToUpdate","setProductToUpdate","fetchProducts","response","fetch","data","json","error","console","validateForm","_formData$itemName","_formData$unit","_formData$productDeta","_formData$refillDate","_formData$status","_formData$notes","newErrors","trim","isNaN","handleChange","e","target","name","value","sendData","preventDefault","Object","keys","length","_id","method","headers","body","JSON","stringify","ok","alert","resetForm","err","handleDelete","productId","message","handleUpdate","product","itemname","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","colSpan","onSubmit","field","replace","type","onChange","_c","$RefreshReg$"],"sources":["H:/ITPM/frontend/src/components/AddFruits.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./AddFruits.css\";\r\n\r\nexport default function AddFruits() {\r\n    const [formData, setFormData] = useState({\r\n        itemName: \"\",\r\n        quantity: \"\",\r\n        unit: \"\",\r\n        productDetails: \"\",\r\n        refillDate: \"\",\r\n        status: \"\",\r\n        notes: \"\",\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [products, setProducts] = useState([]);\r\n    const [formVisible, setFormVisible] = useState(false);\r\n    const [isUpdateMode, setIsUpdateMode] = useState(false);\r\n    const [productToUpdate, setProductToUpdate] = useState(null);\r\n\r\n    // Fetch products from the server\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8078/category\");\r\n            const data = await response.json();\r\n            setProducts(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching products:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    // Validate form data\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n\r\n        if (!formData.itemName?.trim()) newErrors.itemName = \"Required.\";\r\n        if (isNaN(formData.quantity) || formData.quantity <= 0) newErrors.quantity = \"Enter a valid number.\";\r\n        if (!formData.unit?.trim()) newErrors.unit = \"Required.\";\r\n        if (!formData.productDetails?.trim()) newErrors.productDetails = \"Required.\";\r\n        if (!formData.refillDate?.trim()) newErrors.refillDate = \"Required.\";\r\n        if (!formData.status?.trim()) newErrors.status = \"Required.\";\r\n        if (!formData.notes?.trim()) newErrors.notes = \"Required.\";\r\n\r\n        return newErrors;\r\n    };\r\n\r\n    // Handle form data changes\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    // Submit form data to the server\r\n    const sendData = async (e) => {\r\n        e.preventDefault();\r\n        const newErrors = validateForm();\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (isUpdateMode) {\r\n                const response = await fetch(`http://localhost:8078/category/update/${productToUpdate._id}`, {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(formData),\r\n                });\r\n                if (response.ok) {\r\n                    alert(\"Product Updated Successfully\");\r\n                }\r\n            } else {\r\n                const response = await fetch(\"http://localhost:8078/category/add\", {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(formData),\r\n                });\r\n                if (response.ok) {\r\n                    alert(\"New Product Added Successfully\");\r\n                }\r\n            }\r\n            resetForm();\r\n            fetchProducts(); // Refresh the product list\r\n        } catch (err) {\r\n            console.error(\"Error occurred:\", err);\r\n            alert(\"Network or server error. Please try again later.\");\r\n        }\r\n    };\r\n\r\n    // Reset the form data\r\n    const resetForm = () => {\r\n        setFormData({\r\n            itemName: \"\",\r\n            quantity: \"\",\r\n            unit: \"\",\r\n            productDetails: \"\",\r\n            refillDate: \"\",\r\n            status: \"\",\r\n            notes: \"\",\r\n        });\r\n        setErrors({});\r\n        setFormVisible(false);\r\n        setIsUpdateMode(false);\r\n        setProductToUpdate(null);\r\n    };\r\n\r\n    // Handle delete product\r\n    const handleDelete = async (productId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8078/category/delete/${productId}`, {\r\n                method: 'DELETE',\r\n            });\r\n            if (response.ok) {\r\n                alert(\"Product deleted successfully\");\r\n                fetchProducts();\r\n            }\r\n        } catch (err) {\r\n            alert(\"Error deleting product:\", err.message);\r\n        }\r\n    };\r\n\r\n    // Handle update product\r\n    const handleUpdate = (product) => {\r\n        setProductToUpdate(product);\r\n        setFormData({\r\n            itemName: product.itemname,\r\n            quantity: product.quantity,\r\n            unit: product.unit,\r\n            productDetails: product.productDetails,\r\n            refillDate: product.refillDate,\r\n            status: product.status,\r\n            notes: product.notes,\r\n        });\r\n        setIsUpdateMode(true);\r\n        setFormVisible(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Fruit List 🍎</h1>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Item</th>\r\n                        <th>Qty</th>\r\n                        <th>Unit</th>\r\n                        <th>Details</th>\r\n                        <th>Refill Date</th>\r\n                        <th>Status</th>\r\n                        <th>Notes</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.length > 0 ? (\r\n                        products.map((product, index) => (\r\n                            <tr key={index}>\r\n                                <td>{product.itemname}</td>\r\n                                <td>{product.quantity}</td>\r\n                                <td>{product.unit}</td>\r\n                                <td>{product.productDetails}</td>\r\n                                <td>{product.refillDate}</td>\r\n                                <td>{product.status}</td>\r\n                                <td>{product.notes}</td>\r\n                                <td>\r\n                                    <button onClick={() => handleUpdate(product)}>Update</button>\r\n                                    <button onClick={() => handleDelete(product._id)}>Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan=\"8\">No products available</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n\r\n            <button onClick={() => setFormVisible(!formVisible)} className=\"add-button\">\r\n                {formVisible ? \"Cancel\" : \"+ Add Product\"}\r\n            </button>\r\n\r\n            {formVisible && (\r\n                <form onSubmit={sendData} className=\"product-form\">\r\n                    <h2>{isUpdateMode ? \"Update Product\" : \"Add Product\"}</h2>\r\n                    {[\"itemName\", \"quantity\", \"unit\", \"productDetails\", \"refillDate\", \"status\", \"notes\"].map((field) => (\r\n                        <div key={field}>\r\n                            <label>{field.replace(/([A-Z])/g, \" $1\")}</label>\r\n                            <input \r\n                                type={field === \"quantity\" ? \"number\" : field === \"refillDate\" ? \"date\" : \"text\"}\r\n                                name={field}\r\n                                value={formData[field]}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors[field] && <p className=\"error\">{errors[field]}</p>}\r\n                        </div>\r\n                    ))}\r\n                    <button type=\"submit\">{isUpdateMode ? \"Update Product\" : \"Submit\"}</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}