{"ast":null,"code":"var _jsxFileName = \"H:\\\\ITPM\\\\frontend\\\\src\\\\components\\\\ProductCharts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Bar, Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement } from \"chart.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ProductCharts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement);\nconst ProductCharts = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8073/category\");\n        console.log(\"Fetched products:\", response.data); // Log the fetched data\n        setProducts(response.data); // Assuming data is an array\n      } catch (error) {\n        console.error(\"Error fetching product data:\", error);\n      }\n    };\n    fetchProducts();\n  }, []);\n\n  // Check the products after they are set\n  useEffect(() => {\n    console.log(\"Products state:\", products);\n  }, [products]);\n  if (products.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this); // Display loading message if no products are loaded yet\n  }\n\n  // Process products to get the item names and corresponding weights\n  const itemNames = products.map(product => product.name); // Assuming 'name' holds the product name\n  const itemWeights = products.map(product => product.weight); // Assuming 'weight' holds the weight in kg\n\n  // For Bar Chart\n  const barChartData = {\n    labels: itemNames,\n    // Set item names as X-axis labels\n    datasets: [{\n      label: \"Product Weight (kg)\",\n      data: itemWeights,\n      // Set item weights as Y-axis data\n      backgroundColor: \"rgba(54, 162, 235, 0.6)\",\n      borderColor: \"rgba(54, 162, 235, 1)\",\n      borderWidth: 3\n    }]\n  };\n\n  // For Pie Chart (optional, if you want to display distribution of weights)\n  const pieChartData = {\n    labels: itemNames,\n    datasets: [{\n      data: itemWeights,\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/\"),\n      className: \"back-button\",\n      children: \"Back to Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chart-heading\",\n      children: \"Product Weight Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: barChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chart-heading\",\n      children: \"Product Weight Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: pieChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductCharts, \"ecxQLsKYvD2r43CaYODvdXB9I/c=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductCharts;\nexport default ProductCharts;\nvar _c;\n$RefreshReg$(_c, \"ProductCharts\");","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","useNavigate","jsxDEV","_jsxDEV","register","ProductCharts","_s","products","setProducts","navigate","fetchProducts","response","get","console","log","data","error","length","children","fileName","_jsxFileName","lineNumber","columnNumber","itemNames","map","product","name","itemWeights","weight","barChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","pieChartData","hoverBackgroundColor","onClick","className","_c","$RefreshReg$"],"sources":["H:/ITPM/frontend/src/components/ProductCharts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Bar, Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement } from \"chart.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./ProductCharts.css\"; \r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement);\r\n\r\nconst ProductCharts = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:8073/category\");\r\n                console.log(\"Fetched products:\", response.data);  // Log the fetched data\r\n                setProducts(response.data);  // Assuming data is an array\r\n            } catch (error) {\r\n                console.error(\"Error fetching product data:\", error);\r\n            }\r\n        };\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    // Check the products after they are set\r\n    useEffect(() => {\r\n        console.log(\"Products state:\", products);\r\n    }, [products]);\r\n\r\n    if (products.length === 0) {\r\n        return <div>Loading...</div>;  // Display loading message if no products are loaded yet\r\n    }\r\n\r\n    // Process products to get the item names and corresponding weights\r\n    const itemNames = products.map(product => product.name);  // Assuming 'name' holds the product name\r\n    const itemWeights = products.map(product => product.weight);  // Assuming 'weight' holds the weight in kg\r\n\r\n    // For Bar Chart\r\n    const barChartData = {\r\n        labels: itemNames,  // Set item names as X-axis labels\r\n        datasets: [\r\n            {\r\n                label: \"Product Weight (kg)\",\r\n                data: itemWeights,  // Set item weights as Y-axis data\r\n                backgroundColor: \"rgba(54, 162, 235, 0.6)\",\r\n                borderColor: \"rgba(54, 162, 235, 1)\",\r\n                borderWidth: 3,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // For Pie Chart (optional, if you want to display distribution of weights)\r\n    const pieChartData = {\r\n        labels: itemNames,\r\n        datasets: [\r\n            {\r\n                data: itemWeights,\r\n                backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\r\n                hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => navigate(\"/\")} className=\"back-button\">Back to Products</button>\r\n            <h2 className=\"chart-heading\">Product Weight Overview</h2>\r\n            <div className=\"chart-container\">\r\n                <Bar data={barChartData} />\r\n            </div>\r\n\r\n            <h2 className=\"chart-heading\">Product Weight Distribution</h2>\r\n            <div className=\"chart-container\">\r\n                <Pie data={pieChartData} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCharts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}